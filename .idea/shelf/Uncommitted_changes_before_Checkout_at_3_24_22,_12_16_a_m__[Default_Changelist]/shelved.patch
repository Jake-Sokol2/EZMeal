Index: app/src/main/java/navigationFragments/GroupListsFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package navigationFragments;\n\nimport android.content.ClipData;\nimport android.os.Bundle;\n\nimport androidx.annotation.NonNull;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentTransaction;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.example.ezmeal.MainActivity;\nimport com.example.ezmeal.Model.GroceryListModel;\nimport android.os.Parcelable;\nimport android.text.TextUtils;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.LinearLayout;\nimport android.widget.Toast;\n\nimport com.example.ezmeal.MainRecyclerAdapter;\nimport com.example.ezmeal.Model.Item;\nimport com.example.ezmeal.R;\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.OnFailureListener;\nimport com.google.android.gms.tasks.OnSuccessListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.android.material.bottomsheet.BottomSheetDialog;\nimport com.google.android.material.bottomsheet.BottomSheetDialogFragment;\nimport com.google.firebase.firestore.CollectionReference;\nimport com.google.firebase.firestore.DocumentReference;\nimport com.google.firebase.firestore.FirebaseFirestore;\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\nimport com.google.firebase.firestore.QuerySnapshot;\n\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * A simple {@link Fragment} subclass.\n * Use the {@link GroupListsFragment#newInstance} factory method to\n * create an instance of this fragment.\n */\npublic class GroupListsFragment extends Fragment\n{\n    private ArrayList<List<String>> groceryList = new ArrayList<List<String>>();\n    private GroceryListModel theModel = new GroceryListModel();\n    //BottomSheetDialog bottomSheetDialog = new BottomSheetDialog(requireContext(), R.style.BottomSheetDialogTheme);\n    //BottomSheetDialogFragment bottomSheetDialogFrag = new BottomSheetDialogFragment();\n\n    List<String> list = new ArrayList<String>();\n    private RecyclerView rvGroupList;\n    private MainRecyclerAdapter adapter;\n    private FirebaseFirestore db;\n\n    private String brand, name;\n    private double quantity;\n\n    // TODO: Rename parameter arguments, choose names that match\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n    private static final String ARG_PARAM1 = \"param1\";\n    private static final String ARG_PARAM2 = \"param2\";\n    private static final String RECYCLER_VIEW_KEY = \"recycler_view_key\";\n    private static final String RV_DATA = \"rv_data\";\n    // TODO: Rename and change types of parameters\n    private String mParam1;\n    private String mParam2;\n\n    public GroupListsFragment() {\n        // Required empty public constructor\n    }\n\n    /**\n     * Use this factory method to create a new instance of\n     * this fragment using the provided parameters.\n     *\n     * @param param1 Parameter 1.\n     * @param param2 Parameter 2.\n     * @return A new instance of fragment GroupListsFragment.\n     */\n    // TODO: Rename and change types and number of parameters\n    public static GroupListsFragment newInstance(String param1, String param2) {\n        GroupListsFragment fragment = new GroupListsFragment();\n        Bundle args = new Bundle();\n        args.putString(ARG_PARAM1, param1);\n        args.putString(ARG_PARAM2, param2);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n\n        super.onCreate(savedInstanceState);\n        if(savedInstanceState != null) {\n            theModel.restoreGroceryList((List<List<String>>)savedInstanceState.getSerializable(RV_DATA));\n        }else {\n            if (getArguments() != null) {\n                mParam1 = getArguments().getString(ARG_PARAM1);\n                mParam2 = getArguments().getString(ARG_PARAM2);\n            }\n        }\n\n        /*\n        No longer needed because adding items works and the items\n        are not nuked on rotation.\n\n        theModel.addItem(\"Milk\", \"milk brand\");\n        theModel.addItem(\"Fruit\", \"fruit brand\");\n        theModel.addItem(\"Huevo\", \"Huevo del super\");\n        */\n\n    }\n\n\n    private EditText itemname, brandname;\n    private Button additem;\n\n    private String itemName, brandName;\n\n\n\n    private void addDataToFirestore(String itemName, String brandName){\n        CollectionReference dbItems = db.collection(\"Items\");\n        Item item = new Item(itemName, brandName);\n        dbItems.add(item).addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n            @Override\n            public void onSuccess(DocumentReference documentReference) {\n                Toast.makeText(getContext(), \"Item added\", Toast.LENGTH_SHORT).show();\n            }\n        }).addOnFailureListener(new OnFailureListener() {\n            @Override\n            public void onFailure(@NonNull Exception e) {\n                Toast.makeText(getContext(), \"Item not added\", Toast.LENGTH_SHORT).show();\n            }\n        });\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        //return inflater.inflate(R.layout.fragment_group_lists, container, false);\n        View view = inflater.inflate(R.layout.fragment_group_lists, container, false);\n\n\n\n        rvGroupList = (RecyclerView) view.findViewById(R.id.rvGroupLists);\n        //adapter = new MainRecyclerAdapter(groceryList);\n        adapter = new MainRecyclerAdapter(theModel.getGroceryList());\n        rvGroupList.setAdapter(adapter);\n        RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(this.getActivity());\n        rvGroupList.setLayoutManager(layoutManager);\n\n\n        // Add some data\n        // todo: remove this when user's list saves on application close\n        adapter.notifyDataSetChanged();\n\n        //clickedView = (View) view.findViewById(R.id.editListItem);\n\n        adapter.setOnItemClickListener(new MainRecyclerAdapter.MainAdapterListener()\n        {\n            @Override\n            public void onItemClick(int position)\n            {\n                //String selectedName = groceryList.get(position);\n                //clickedView = (View) layoutManager.findViewByPosition(position);\n                //Toast.makeText(getActivity(), clickedView., Toast.LENGTH_SHORT).show();\n                // Code to use the selected name goes hereâ€¦\n\n            }\n\n\n\n        });\n\n        Button btnAddListItem = (Button) view.findViewById(R.id.btnAddItem);\n        btnAddListItem.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n\n                BottomSheetDialog bottomSheetDialog = new BottomSheetDialog(requireContext(), R.style.BottomSheetDialogTheme);//com.google.android.material.R.style.Theme_Design_BottomSheetDialog);\n                View bottomSheetView = LayoutInflater.from(getContext()).inflate(R.layout.fragment_add_list_item, (LinearLayout) view.findViewById(R.id.bottomSheetAddList));\n                //BottomSheetDialog bottomSheet = new BottomSheetDialog(requireContext());\n                //FragmentManager foo = getActivity().getSupportFragmentManager();\n                //bottomSheet.show();\n                //openActivityAddListItem();\n\n                //bottomSheetDialog.setContentView(R.layout.fragment_add_list_item)\n\n                bottomSheetDialog.setContentView(bottomSheetView);\n                bottomSheetDialog.show();\n\n                // onClickListeners for the bottom sheet's views\n                Button btnConfirm = (Button) bottomSheetDialog.findViewById(R.id.btnConfirm);\n                EditText editItemName = (EditText) bottomSheetDialog.findViewById(R.id.editItemName);\n                EditText editBrandName = (EditText) bottomSheetDialog.findViewById(R.id.editBrandName);\n                //TextView txtBrandName = (TextView)\n\n                btnConfirm.setOnClickListener(new View.OnClickListener()\n                {\n                    @Override\n                    public void onClick(View view)\n                    {\n                        theModel.addItem(editItemName.getText().toString(), editBrandName.getText().toString());\n                        adapter.notifyDataSetChanged();\n\n\n                        itemName = editItemName.getText().toString();\n                        brandName = editBrandName.getText().toString();\n\n                        if (TextUtils.isEmpty(itemName)) {\n                            itemname.setError(\"Enter item name\");\n                        } else if (TextUtils.isEmpty(brandName)) {\n                            brandname.setError(\"Enter brand name\");\n                        } else {\n                            addDataToFirestore(itemName, brandName);\n                        }\n\n\n                        // Closes the bottom sheet after the User enters an item\n                        bottomSheetDialog.dismiss();\n                    }//end additembutton in add item BottomSheetDialog\n                });//OnclickListener\n\n\n\n                /*\n                    TODO: This block creates new frag, but layout is fucky.\n                     Implement cancel button as well so you can get back to previous screen.\n                */\n/*\n                AddListItemFragment AddItemFrag = new AddListItemFragment();\n                FragmentTransaction transaction = getParentFragmentManager().beginTransaction();\n                transaction.replace(R.id.group_lists, AddItemFrag);\n                transaction.commit();\n*/\n\n            }//Add item onClick\n        });\n        db = FirebaseFirestore.getInstance();\n\n\n        db.collection(\"Items\")\n                .get()\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {@Override\n                public void onComplete(@NonNull Task<QuerySnapshot> task) {\n                    if (task.isSuccessful()) {\n                        for (QueryDocumentSnapshot document : task.getResult()) {\n                            Log.d(\"MYDEBUG\", document.getId() + \" => \" + document.getData());\n                            brand = document.getString(\"brand\");\n                            name = document.getString(\"name\");\n                            //quantity = document.getDouble(\"quantity\");\n                            theModel.addItem(name, brand);\n                            adapter.notifyDataSetChanged();\n                        }\n                    } else {\n                        Log.w(\"MYDEBUG\", \"Error getting documents.\", task.getException());\n                    }\n                }\n                });\n\n        return view;\n    }\n\n\n\n    // Clears the recyclerview each time the fragment is paused, as each time the fragment opens it is filled with new data\n    @Override\n    public void onStop()\n    {\n        super.onStop();\n\n        theModel.dumpList();\n        rvGroupList.getAdapter().notifyDataSetChanged();\n    }\n/*\n    @Override\n    public void onSaveInstanceState(@NonNull Bundle outState){\n        Parcelable rvState = rvGroupList.getLayoutManager().onSaveInstanceState();\n        super.onSaveInstanceState(outState);\n        //I need to save the grocery list here\n        //save recycler view position?\n        //outState.putParcelable(RECYCLER_VIEW_KEY, rvState);\n        //save recycler view items?\n        //outState.putSerializable(RV_DATA, (Serializable) theModel.getGroceryList());\n        //getChildFragmentManager().putFragment(outState, \"bottom_dialog\", bottomSheetDialogFrag);\n\n    }\n\n\n*/\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/navigationFragments/GroupListsFragment.java b/app/src/main/java/navigationFragments/GroupListsFragment.java
--- a/app/src/main/java/navigationFragments/GroupListsFragment.java	
+++ b/app/src/main/java/navigationFragments/GroupListsFragment.java	
@@ -282,6 +282,7 @@
         theModel.dumpList();
         rvGroupList.getAdapter().notifyDataSetChanged();
     }
+
 /*
     @Override
     public void onSaveInstanceState(@NonNull Bundle outState){
Index: .idea/vcs.xml
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/vcs.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
